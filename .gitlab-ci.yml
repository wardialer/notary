image: docker:latest
services:
- docker:dind

stages:
  - build
  - test
  - release
  - deploy
  
variables:
  API_IMAGE: $CI_REGISTRY/notary/api
  DASHBOARD_IMAGE: $CI_REGISTRY/notary/dashboard

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -f Dockerfile.api -t $API_IMAGE:$CI_COMMIT_REF_NAME api
    - docker push $API_IMAGE:$CI_COMMIT_REF_NAME
    - docker build --pull -f Dockerfile.dashboard -t $DASHBOARD_IMAGE:$CI_COMMIT_REF_NAME dashboard
    - docker push $DASHBOARD_IMAGE:$CI_COMMIT_REF_NAME

test:
  stage: test
  script:
    - docker pull $API_IMAGE:$CI_COMMIT_REF_NAME
    - docker run $API_IMAGE:$CI_COMMIT_REF_NAME npm run test:batch
    
release:
  stage: release
  script:
    - docker pull $API_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $API_IMAGE:$CI_COMMIT_REF_NAME $API_IMAGE:latest
    - docker push $API_IMAGE:latest
    - docker pull $DASHBOARD_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $DASHBOARD_IMAGE:$CI_COMMIT_REF_NAME $DASHBOARD_IMAGE:latest
    - docker push $DASHBOARD_IMAGE:latest
  only:
    - master

deploy:
  stage: deploy
  variables:
    RANCHER_COMPOSE_DOWNLOAD: "http://releases.rancher.com/compose/v0.12.5/rancher-compose-linux-amd64-v0.12.5.tar.gz"
    RANCHER_COMPOSE_TAR: "rancher-compose-linux-amd64-v0.12.5.tar.gz"
    RANCHER_COMPOSE_DIR: "rancher-compose-v0.12.5"
    STACK_NAME: "notary-cluster"
  script:
    - wget $RANCHER_COMPOSE_DOWNLOAD
    - tar -zxvf $RANCHER_COMPOSE_TAR
    - ls -l ./$RANCHER_COMPOSE_DIR/
    - alias rancher-compose=$PWD/$RANCHER_COMPOSE_DIR/rancher-compose

    - rancher-compose --debug -p $STACK_NAME --url $RANCHER_URL --access-key $RANCHER_ACCESS_KEY --secret-key $RANCHER_SECRET_KEY -f docker-compose.yml up --force-upgrade --pull -d
    - rancher-compose --debug -p $STACK_NAME --url $RANCHER_URL --access-key $RANCHER_ACCESS_KEY --secret-key $RANCHER_SECRET_KEY -f docker-compose.yml up --confirm-upgrade -d
  environment: "Default"
  only:
    - master

